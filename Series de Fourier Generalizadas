{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMQNonl/kNKUaVubyRwrmHo",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Raulfb04/EDP-1/blob/main/Series%20de%20Fourier%20Generalizadas\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Series de Fourier Generalizadas**"
      ],
      "metadata": {
        "id": "CJ5vD_zaP34_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import sympy as sp\n",
        "from sympy import Function, Eq, symbols, exp, simplify, integrate, pi, sin, cos\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "AgsRicfsKoiz"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se importan las bibliotecas SymPy, NumPy y Matplotlib para realizar el an√°lisis simb√≥lico, c√°lculo num√©rico y graficaci√≥n, respectivamente."
      ],
      "metadata": {
        "id": "lfT-HdMFRa9H"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Variables simb√≥licas\n",
        "x, lam = symbols('x lambda', real=True)\n",
        "f = Function('f')"
      ],
      "metadata": {
        "id": "2PC8rhqANhkd"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Creamos las variables simb√≥licas\n",
        "ùë•\n",
        "x y\n",
        "ùúÜ\n",
        "Œª, as√≠ como una funci√≥n simb√≥lica\n",
        "ùëì\n",
        "(\n",
        "ùë•\n",
        ")\n",
        "f(x), que es la soluci√≥n de nuestra ecuaci√≥n diferencial."
      ],
      "metadata": {
        "id": "z8Ue_5NGVHAS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 1. Definimos la EDO del problema\n",
        "ode = Eq(f(x).diff(x, 2) + 2*f(x).diff(x) + lam*f(x), 0)\n",
        "display(ode)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 54
        },
        "id": "Lb7YXTQrNljV",
        "outputId": "4a48286c-c928-4fef-db1c-7cd03f7a9316"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                       2           \n",
              "           d          d            \n",
              "Œª‚ãÖf(x) + 2‚ãÖ‚îÄ‚îÄ(f(x)) + ‚îÄ‚îÄ‚îÄ(f(x)) = 0\n",
              "           dx           2          \n",
              "                      dx           "
            ],
            "text/latex": "$\\displaystyle \\lambda f{\\left(x \\right)} + 2 \\frac{d}{d x} f{\\left(x \\right)} + \\frac{d^{2}}{d x^{2}} f{\\left(x \\right)} = 0$"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Esta es la EDO original: $f‚Ä≤‚Ä≤(x)+2f‚Ä≤(x)+Œªf(x)=0$ .El objetivo es resolverla con condiciones de frontera."
      ],
      "metadata": {
        "id": "kD5tombMR_w3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 2. Forma de Sturm-Liouville: multiplicamos por el factor integrante Œº(x) = e^{2x}\n",
        "mu = exp(2*x)\n",
        "edo_sturm = simplify(mu * (f(x).diff(x, 2) + 2*f(x).diff(x) + lam*f(x)))\n",
        "display(edo_sturm)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 58
        },
        "id": "qa6wjUBONn_1",
        "outputId": "372b8cd2-aa9c-4518-d278-6fa9ec594b52"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "‚éõ                       2       ‚éû     \n",
              "‚éú           d          d        ‚éü  2‚ãÖx\n",
              "‚éúŒª‚ãÖf(x) + 2‚ãÖ‚îÄ‚îÄ(f(x)) + ‚îÄ‚îÄ‚îÄ(f(x))‚éü‚ãÖ‚ÑØ   \n",
              "‚éú           dx           2      ‚éü     \n",
              "‚éù                      dx       ‚é†     "
            ],
            "text/latex": "$\\displaystyle \\left(\\lambda f{\\left(x \\right)} + 2 \\frac{d}{d x} f{\\left(x \\right)} + \\frac{d^{2}}{d x^{2}} f{\\left(x \\right)}\\right) e^{2 x}$"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Multiplicamos la EDO por un factor\n",
        "\n",
        "Œº(x)=e^\n",
        "2x\n",
        "  para ponerla en forma de Sturm-Liouville:"
      ],
      "metadata": {
        "id": "4dVWK2CvTEwI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 3. Resoluci√≥n del problema\n",
        "y = Function('y')\n",
        "f_subs = exp(-x)*y(x)\n",
        "simplified_eq = simplify(f_subs.diff(x, 2) + 2*f_subs.diff(x) + lam*f_subs)\n",
        "display(Eq(f_subs.diff(x, 2) + 2*f_subs.diff(x) + lam*f_subs, simplified_eq))\n",
        "\n",
        "mu = sp.sqrt(lam - 1)\n",
        "A, B = sp.symbols('A B')\n",
        "gen_sol_y = A*sin(mu*x) + B*cos(mu*x)\n",
        "f_gen = exp(-x)*gen_sol_y\n",
        "display(f_gen)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        },
        "id": "TXrqem18Nqm9",
        "outputId": "1f67b0a0-5903-4664-af49-1dafd5403d59"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "True"
            ],
            "text/latex": "$\\displaystyle \\text{True}$"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "‚éõ     ‚éõ    _______‚éû        ‚éõ    _______‚éû‚éû  -x\n",
              "‚éùA‚ãÖsin‚éùx‚ãÖ‚ï≤‚ï± Œª - 1 ‚é† + B‚ãÖcos‚éùx‚ãÖ‚ï≤‚ï± Œª - 1 ‚é†‚é†‚ãÖ‚ÑØ  "
            ],
            "text/latex": "$\\displaystyle \\left(A \\sin{\\left(x \\sqrt{\\lambda - 1} \\right)} + B \\cos{\\left(x \\sqrt{\\lambda - 1} \\right)}\\right) e^{- x}$"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Condiciones de frontera\n",
        "bc1 = f_gen.subs(x, 0)\n",
        "bc2 = f_gen.subs(x, 1)\n",
        "display(bc1, bc2)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 78
        },
        "id": "c8FtSyU8NtDt",
        "outputId": "b1232213-148e-4995-cceb-5e3ac6dc1509"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "B"
            ],
            "text/latex": "$\\displaystyle B$"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "‚éõ     ‚éõ  _______‚éû        ‚éõ  _______‚éû‚éû  -1\n",
              "‚éùA‚ãÖsin‚éù‚ï≤‚ï± Œª - 1 ‚é† + B‚ãÖcos‚éù‚ï≤‚ï± Œª - 1 ‚é†‚é†‚ãÖ‚ÑØ  "
            ],
            "text/latex": "$\\displaystyle \\frac{A \\sin{\\left(\\sqrt{\\lambda - 1} \\right)} + B \\cos{\\left(\\sqrt{\\lambda - 1} \\right)}}{e}$"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 4. Autovalores y autofunciones\n",
        "n = symbols('n', integer=True, positive=True)\n",
        "lambda_n = 1 + (n * pi)**2\n",
        "mu_n = n * pi\n",
        "phi_n = exp(-x) * sin(mu_n * x)\n",
        "\n",
        "# 5. Funci√≥n a expandir\n",
        "u = exp(-x)"
      ],
      "metadata": {
        "id": "EY9yOm_CNvTt"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Producto interno con peso r(x) = e^{2x}\n",
        "inner_prod = lambda f1, f2: integrate(f1*f2*exp(2*x), (x, 0, 1))\n",
        "a_n_num = inner_prod(u, phi_n)\n",
        "a_n_den = inner_prod(phi_n, phi_n)\n",
        "a_n = simplify(a_n_num / a_n_den)\n",
        "display(a_n)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 54
        },
        "id": "BqfX1mXdNxNF",
        "outputId": "fd096b13-3e9d-4e6f-d6e9-50bd09749ad3"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  ‚éõ        n‚éû\n",
              "2‚ãÖ‚éù1 - (-1) ‚é†\n",
              "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n",
              "     œÄ‚ãÖn     "
            ],
            "text/latex": "$\\displaystyle \\frac{2 \\left(1 - \\left(-1\\right)^{n}\\right)}{\\pi n}$"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Serie con primeros 5 t√©rminos\n",
        "from sympy import summation\n",
        "series_approx = summation(a_n * phi_n, (n, 1, 20))\n",
        "display(series_approx)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 66
        },
        "id": "O3g8KZlANzP1",
        "outputId": "eeadcb97-d572-48aa-9ba7-471b8c60504b"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  ‚éõ             2‚ãÖsin(3‚ãÖœÄ‚ãÖx)   2‚ãÖsin(5‚ãÖœÄ‚ãÖx)   2‚ãÖsin(7‚ãÖœÄ‚ãÖx)   2‚ãÖsin(9‚ãÖœÄ‚ãÖx)   2‚ãÖ ‚Ü™\n",
              "2‚ãÖ‚éú2‚ãÖsin(œÄ‚ãÖx) + ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ + ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ + ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ + ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ + ‚îÄ‚îÄ ‚Ü™\n",
              "  ‚éù                  3              5              7              9            ‚Ü™\n",
              "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚Ü™\n",
              "                                                                               ‚Ü™\n",
              "\n",
              "‚Ü™ sin(11‚ãÖœÄ‚ãÖx)   2‚ãÖsin(13‚ãÖœÄ‚ãÖx)   2‚ãÖsin(15‚ãÖœÄ‚ãÖx)   2‚ãÖsin(17‚ãÖœÄ‚ãÖx)   2‚ãÖsin(19‚ãÖœÄ‚ãÖx)‚éû ‚Ü™\n",
              "‚Ü™ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ + ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ + ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ + ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ + ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚éü ‚Ü™\n",
              "‚Ü™    11              13              15              17              19      ‚é† ‚Ü™\n",
              "‚Ü™ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚Ü™\n",
              "‚Ü™ œÄ                                                                            ‚Ü™\n",
              "\n",
              "‚Ü™   -x\n",
              "‚Ü™ ‚ãÖ‚ÑØ  \n",
              "‚Ü™     \n",
              "‚Ü™ ‚îÄ‚îÄ‚îÄ‚îÄ\n",
              "‚Ü™     "
            ],
            "text/latex": "$\\displaystyle \\frac{2 \\left(2 \\sin{\\left(\\pi x \\right)} + \\frac{2 \\sin{\\left(3 \\pi x \\right)}}{3} + \\frac{2 \\sin{\\left(5 \\pi x \\right)}}{5} + \\frac{2 \\sin{\\left(7 \\pi x \\right)}}{7} + \\frac{2 \\sin{\\left(9 \\pi x \\right)}}{9} + \\frac{2 \\sin{\\left(11 \\pi x \\right)}}{11} + \\frac{2 \\sin{\\left(13 \\pi x \\right)}}{13} + \\frac{2 \\sin{\\left(15 \\pi x \\right)}}{15} + \\frac{2 \\sin{\\left(17 \\pi x \\right)}}{17} + \\frac{2 \\sin{\\left(19 \\pi x \\right)}}{19}\\right) e^{- x}}{\\pi}$"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 6. Graficar la funci√≥n original y la aproximaci√≥n\n",
        "u_func = sp.lambdify(x, u, modules=['numpy'])\n",
        "series_func = sp.lambdify(x, series_approx, modules=['numpy'])\n",
        "\n",
        "x_vals = np.linspace(0, 1, 400)\n",
        "u_vals = u_func(x_vals)\n",
        "s_vals = series_func(x_vals)\n",
        "\n",
        "plt.figure(figsize=(8, 5))\n",
        "plt.plot(x_vals, u_vals, label=r'$u(x) = e^{-x}$', linewidth=2)\n",
        "plt.plot(x_vals, s_vals, label='Aproximaci√≥n (20 t√©rminos)', linestyle='--')\n",
        "plt.xlabel('x')\n",
        "plt.ylabel('u(x)')\n",
        "plt.title('Expansi√≥n en Serie de Fourier Generalizada')\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "cid3LZNsN1jF",
        "outputId": "70625e10-a7d5-44f5-8be8-95446b3821e9"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}